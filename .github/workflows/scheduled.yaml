name: Scheduled Job and Commit Job

on:
  schedule:
    - cron: '0 */12 * * *' # Run every 12 hours
  push:
    branches: [ main ] # Run on pushes to the main branch
  workflow_dispatch:

jobs:

  scheduled-and-commit-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Run script to select gitWrandom
        run: |
          python selector/random_lines.py

      - name: Push gitWrandom
        if: steps.changesgitWrandom.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/gitWrandom
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push

      - name: Run script to select gitWrandom lines channels
        run: |
          python selector/random_lines_ch.py

      - name: Push gitChrandom
        if: steps.changesgitChrandom.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/gitChrandom
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push

      - name: Merge output files
        run: cat selector/gitWrandom selector/gitChrandom > selector/merged_output
        
      - name: Commit merged output
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add selector/merged_output
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated merged output on ${timestamp}"
        
      - name: Convert merged output to base64
        run: |
          > selector/merged_output64
          content=$(cat selector/merged_output | base64 | tr -d '\n')
          echo "$content" > selector/merged_output64
        
      - name: Check for merged output base64 changes
        id: changesMergedOutput64
        run: |
          git diff --quiet selector/merged_output64 && echo 'No changes' || echo '::set-output name=changed::true'
        
      - name: Push merged output base64
        if: steps.changesMergedOutput64.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/merged_output64
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated merged output on ${timestamp}"
          git push
