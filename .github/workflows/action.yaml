name: let it begin
on:
  schedule:
  - cron: '0 20,23,2,5,8,11,14,17 * * *'
  push:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  commit-job:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  
    steps:
    - uses: actions/checkout@v2
    
    - name: Convert base64
      run: |
          > list64
          content=$(cat list | base64 | tr -d '\n')
            echo "$content" > list64

    - name: Check for base64 Changes
      id: changes64
      run: |
            git diff --quiet && echo 'No changes' || echo '::set-output name=changed::true'
            
    - name: Push Base64
      if: steps.changes64.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git commit --allow-empty -m "Convert to base64"
          git push

    - name: Convert Channels base64
      run: |
          > gitChannels64
          content=$(cat gitChannels | base64 | tr -d '\n')
            echo "$content" > gitChannels64

    - name: Check for Channels base64 Changes
      id: changesChannels
      run: |
            git diff --quiet && echo 'No changes' || echo '::set-output name=changed::true'
            
    - name: Push Channels Base64
      if: steps.changesChannels.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git commit --allow-empty -m "Convert to base64"
          git push
          
  scheduled_job:
    name: Scheduled Job
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
      
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip

    - name: Run script to select gitWrandom
      run: |
          python selector/random_lines.py

    - name: Push gitWrandom
      if: steps.changesgitWrandom.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/gitWrandom
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push

    - name: Convert gitWrandom to base64
      run: |
          > selector/gitWrandom64
          content=$(cat selector/gitWrandom | base64 | tr -d '\n')
            echo "$content" > selector/gitWrandom64

    - name: Check for gitWrandom base64 Changes
      id: changesgitWrandom64
      run: |
            git diff --quiet && echo 'No changes' || echo '::set-output name=changed::true'
            
    - name: Push gitWrandom Base64
      if: steps.changesgitWrandom64.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push
          
    - name: Run script to select gitWrandom lines channels
      run: |
          python selector/random_lines_ch.py

    - name: Push gitChrandom
      if: steps.changesgitChrandom.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/gitChrandom
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push

    - name: Convert gitChrandom to base64
      run: |
          > selector/gitChrandom64
          content=$(cat selector/gitChrandom | base64 | tr -d '\n')
            echo "$content" > selector/gitChrandom64

    - name: Check for Channels base64 Changes
      id: changesgitChrandom64
      run: |
            git diff --quiet && echo 'No changes' || echo '::set-output name=changed::true'
            
    - name: Push Channels Base64
      if: steps.changesgitChrandom64.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated on ${timestamp}"
          git push

    - name: Merge output files
      run: cat selector/gitWrandom selector/gitChrandom > selector/merged_output
    
    - name: Commit merged output
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        git add selector/merged_output
        timestamp=$(TZ='Asia/Tehran' date)
        git commit -m "✅Updated merged output on ${timestamp}"
      
    - name: Convert merged output to base64
      run: |
          > selector/merged_output64
          content=$(cat selector/merged_output | base64 | tr -d '\n')
          echo "$content" > selector/merged_output64
      
    - name: Check for merged output base64 changes
      id: changesMergedOutput64
      run: |
          git diff --quiet selector/merged_output64 && echo 'No changes' || echo '::set-output name=changed::true'
      
    - name: Push merged output base64
      if: steps.changesMergedOutput64.outputs.changed == 'true'
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add selector/merged_output64
          timestamp=$(TZ='Asia/Tehran' date)
          git commit -m "✅Updated merged output on ${timestamp}"
          git push
          
    #- name: Convert IPRename to base64
      #run: |
       #   content=$(cat iprename/iprename | base64 | tr -d '\n')
        #    echo "$content" > iprename/iprename64
            
    #- name: Check for Renamed Base64 Changes
     # id: changesip64
      #run: |
      #      git diff --quiet && echo 'No changes' || echo '::set-output name=changed::true'   
    #- name: Commit and Push Renamed Base64
     # if: steps.changesip64.outputs.changed == 'true'   
      #run: |
       #   git config --local user.email "action@github.com"
        #  git config --local user.name "GitHub Action"
         # git add iprename/iprename64
          #timestamp=$(TZ='Asia/Tehran' date)
          #git commit -m "✅Updated on ${timestamp}"
          #git push
